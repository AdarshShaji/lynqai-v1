{"ast":null,"code":"var _jsxFileName = \"D:\\\\Academic Courses\\\\AI\\\\LynqAI_v1\\\\frontend\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Send, Image, Loader2, Menu, X } from 'lucide-react';\nimport { collection, query, where, getDocs, addDoc, orderBy, serverTimestamp, updateDoc, doc } from 'firebase/firestore';\nimport { firestore, auth } from '../firebase-config';\nimport axios from '../axiosConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst platforms = ['LinkedIn', 'Twitter', 'Facebook', 'Instagram'];\nexport default function Chat() {\n  _s();\n  const [platform, setPlatform] = useState('LinkedIn');\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [conversationHistory, setConversationHistory] = useState([]);\n  const navigate = useNavigate();\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userResponses, setUserResponses] = useState({});\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const questions = [{\n    key: 'tone',\n    question: \"Let's start with the tone. How would you like your post to sound?\",\n    options: ['Professional', 'Inspirational', 'Casual']\n  }, {\n    key: 'length',\n    question: \"Great choice! Now, how long should we make this post?\",\n    options: ['Short (1-2 sentences)', 'Medium (3-4 sentences)', 'Long (5+ sentences)']\n  }, {\n    key: 'goal',\n    question: \"Alright, what's the main goal you want to achieve with this post?\",\n    options: ['Inform', 'Engage', 'Promote']\n  }, {\n    key: 'callToAction',\n    question: \"Almost there! Would you like to include a call-to-action in your post?\",\n    options: ['Yes', 'No']\n  }];\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        console.log('User authenticated:', user.uid);\n        fetchConversations();\n      } else {\n        console.log('No user authenticated, redirecting to login');\n        navigate('/');\n      }\n    });\n    return () => unsubscribe();\n  }, [navigate]);\n  const fetchConversations = async () => {\n    setError(null);\n    try {\n      const user = auth.currentUser;\n      if (!user) throw new Error('No user logged in');\n      console.log('Fetching conversations for user:', user.uid);\n      const q = query(collection(firestore, 'conversations'), where('userId', '==', user.uid), orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      const conversationsList = querySnapshot.docs.map(doc => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          prompt: data.prompt,\n          response: data.response,\n          platform: data.platform,\n          createdAt: data.createdAt ? data.createdAt.toDate() : new Date(),\n          messages: [{\n            type: 'user',\n            content: data.prompt,\n            platform: data.platform\n          }, {\n            type: 'assistant',\n            content: data.response,\n            platform: data.platform\n          }]\n        };\n      });\n      console.log('Fetched conversations:', conversationsList);\n      setConversations(conversationsList);\n    } catch (err) {\n      console.error('Error fetching conversations:', err);\n      if (err.code === 'failed-precondition' || err.message.includes('requires an index')) {\n        setError('Database index is being created. Please try again in a few minutes.');\n      } else {\n        setError('Failed to fetch conversations. Please try again.');\n      }\n    }\n  };\n  const handleSubmit = async type => {\n    if (!input.trim()) return;\n    setIsLoading(true);\n    setError(null);\n    const newUserMessage = {\n      type: 'user',\n      content: input,\n      platform\n    };\n    const updatedMessages = [...messages, newUserMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    if (currentQuestion) {\n      // Handle user's response to AI's question\n      setUserResponses(prev => ({\n        ...prev,\n        [currentQuestion.key]: input\n      }));\n      setCurrentQuestion(null);\n      setQuestionIndex(prevIndex => prevIndex + 1);\n    }\n\n    // Ask the next question or generate the final post\n    await askNextQuestion(updatedMessages);\n  };\n  const askNextQuestion = async updatedMessages => {\n    if (questionIndex < questions.length) {\n      const nextQuestion = questions[questionIndex];\n      setCurrentQuestion(nextQuestion);\n      const aiMessage = {\n        type: 'assistant',\n        content: `${nextQuestion.question} ${nextQuestion.options.join(', ')}`,\n        platform\n      };\n      setMessages([...updatedMessages, aiMessage]);\n      setIsLoading(false);\n    } else {\n      // All questions answered, generate the final post\n      await generateFinalPost(updatedMessages);\n    }\n  };\n  const generateFinalPost = async updatedMessages => {\n    let enhancedPrompt = constructEnhancedPrompt(userResponses, platform, 'text', conversationHistory);\n    try {\n      var _auth$currentUser, _auth$currentUser2;\n      const token = await ((_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.getIdToken());\n      console.log('Sending request to backend');\n      const response = await axios.post('/generate-text', {\n        platform,\n        prompt: enhancedPrompt\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = response.data;\n      console.log('AI Model Response:', data);\n\n      // Extract only the generated content, removing any instructions or prompts\n      const aiContent = extractGeneratedContent(data.generated_text);\n      const newAssistantMessage = {\n        type: 'assistant',\n        content: `Great! Based on your preferences, here's a ${platform} post I've crafted for you:\\n\\n${aiContent}\\n\\nWhat do you think? Would you like to make any changes or try a different approach?`,\n        platform\n      };\n      updatedMessages.push(newAssistantMessage);\n      setMessages(updatedMessages);\n\n      // Update conversation history\n      const updatedHistory = [...conversationHistory, ...updatedMessages];\n      setConversationHistory(updatedHistory);\n\n      // Save conversation to Firestore\n      if ((_auth$currentUser2 = auth.currentUser) !== null && _auth$currentUser2 !== void 0 && _auth$currentUser2.uid) {\n        console.log('Saving conversation to Firestore');\n        try {\n          const conversationData = {\n            userId: auth.currentUser.uid,\n            messages: updatedMessages,\n            platform,\n            lastUpdated: serverTimestamp(),\n            conversationHistory: updatedHistory\n          };\n          if (selectedConversation) {\n            await updateDoc(doc(firestore, 'conversations', selectedConversation.id), conversationData);\n            console.log('Conversation updated with ID:', selectedConversation.id);\n          } else {\n            const docRef = await addDoc(collection(firestore, 'conversations'), {\n              ...conversationData,\n              createdAt: serverTimestamp()\n            });\n            console.log('New conversation saved with ID:', docRef.id);\n            setSelectedConversation({\n              id: docRef.id,\n              ...conversationData\n            });\n          }\n        } catch (firestoreError) {\n          console.error('Error saving to Firestore:', firestoreError);\n          setError('Failed to save conversation. Please try again.');\n        }\n      } else {\n        console.error('User not authenticated');\n        setError('User not authenticated. Please log in again.');\n      }\n      fetchConversations();\n    } catch (err) {\n      console.error('Error:', err);\n      let errorMessage = 'An error occurred while generating content. Please try again.';\n      if (err.response && err.response.data && err.response.data.error) {\n        errorMessage = err.response.data.error;\n        if (err.response.data.details) {\n          errorMessage += ` Details: ${err.response.data.details}`;\n        }\n      }\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n      setCurrentQuestion(null);\n      setUserResponses({});\n      setQuestionIndex(0);\n    }\n  };\n  const constructEnhancedPrompt = (userResponses, platform, type, history) => {\n    let basePrompt = `Create a ${type === 'text' ? 'post' : 'image concept'} for ${platform} that feels personal and engaging. Here's what we know about the user's preferences: `;\n    basePrompt += `They want a ${userResponses.tone.toLowerCase()} tone. `;\n    basePrompt += `The post should be ${userResponses.length.toLowerCase()}. `;\n    basePrompt += `Their main goal is to ${userResponses.goal.toLowerCase()}. `;\n    basePrompt += `They ${userResponses.callToAction === 'Yes' ? 'want' : 'don\\'t want'} to include a call-to-action. `;\n\n    // Add platform-specific instructions\n    switch (platform) {\n      case 'LinkedIn':\n        basePrompt += `Remember, this is for LinkedIn, so keep it professional while still being engaging. Include relevant industry hashtags if appropriate. `;\n        break;\n      case 'Twitter':\n        basePrompt += `This is for Twitter, so keep it concise and impactful. Use hashtags wisely and stay under 280 characters. `;\n        break;\n      case 'Facebook':\n        basePrompt += `For Facebook, we want to encourage interaction. Consider suggesting rich media like images or videos if it fits the content. `;\n        break;\n      case 'Instagram':\n        basePrompt += `This is for Instagram, so the caption should be visually descriptive. Use emojis and hashtags strategically. `;\n        break;\n    }\n    basePrompt += `Please provide the post content, followed by 2-3 engagement strategies or variations. `;\n\n    // Add conversation history to the prompt\n    if (history.length > 0) {\n      basePrompt += `Also, consider this recent conversation context: `;\n      history.slice(-4).forEach((message, index) => {\n        basePrompt += `${message.type === 'user' ? 'User' : 'Assistant'}: ${message.content} `;\n      });\n    }\n    return basePrompt;\n  };\n  const startNewConversation = () => {\n    setMessages([]);\n    setSelectedConversation(null);\n    setPlatform('LinkedIn');\n    setIsSidebarOpen(false);\n    setConversationHistory([]);\n  };\n  const loadConversation = conversation => {\n    if (conversation && conversation.messages) {\n      console.log('Loading conversation:', conversation);\n      setMessages(conversation.messages);\n      setPlatform(conversation.platform || 'LinkedIn');\n      setSelectedConversation(conversation);\n      setIsSidebarOpen(false);\n      // Set conversation history\n      setConversationHistory(conversation.conversationHistory || []);\n    } else {\n      console.error('Invalid conversation data:', conversation);\n      setError('Failed to load conversation. Please try again.');\n    }\n  };\n\n  // Helper function to extract only the generated content\n  const extractGeneratedContent = fullResponse => {\n    // Remove any text before \"Generated Post\" or similar indicators\n    const contentStart = fullResponse.indexOf(\"Generated Post\");\n    if (contentStart !== -1) {\n      fullResponse = fullResponse.substring(contentStart);\n    }\n\n    // Remove any text after engagement strategies or variations\n    const contentEnd = fullResponse.indexOf(\"Engagement strategies:\");\n    if (contentEnd !== -1) {\n      fullResponse = fullResponse.substring(0, contentEnd);\n    }\n\n    // Remove any remaining instructions or labels\n    fullResponse = fullResponse.replace(/Generated Post.*?:/g, '').trim();\n    fullResponse = fullResponse.replace(/Verification of the Content:.*$/s, '').trim();\n    return fullResponse;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} transition-transform duration-300 ease-in-out md:relative md:translate-x-0`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center p-4 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(false),\n          className: \"md:hidden\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewConversation,\n          className: \"w-full py-2 px-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition duration-300\",\n          children: \"New Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-auto h-full pb-20\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-center p-4\",\n          children: \"No conversations yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this) : conversations.map(conv => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => loadConversation(conv),\n          className: \"p-4 border-b hover:bg-gray-100 cursor-pointer transition duration-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium truncate\",\n            children: conv.prompt || (conv.messages && conv.messages.length > 0 ? conv.messages[0].content : 'No messages')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: conv.createdAt ? conv.createdAt.toLocaleString() : 'Unknown date'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)]\n        }, conv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-1 overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"bg-white shadow-sm p-4 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsSidebarOpen(true),\n          className: \"md:hidden\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-center flex-1\",\n          children: selectedConversation ? `Conversation from ${selectedConversation.createdAt.toLocaleString()}` : 'Social Media Post Generator'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), selectedConversation && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewConversation,\n          className: \"bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition duration-300\",\n          children: \"New Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-[70%] rounded-lg p-3 ${message.type === 'user' ? 'bg-blue-500 text-white' : 'bg-white shadow'}`,\n            children: [message.platform && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold mb-1\",\n              children: message.platform\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), message.image && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: message.image,\n              alt: \"Generated\",\n              className: \"mt-2 rounded-lg max-w-full h-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border-t border-gray-200 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2 mb-2 overflow-x-auto pb-2\",\n          children: platforms.map(p => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPlatform(p),\n            className: `px-3 py-1 rounded-full text-sm flex-shrink-0 ${platform === p ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`,\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: \"Type your prompt here...\",\n            className: \"flex-1 p-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            onKeyPress: e => e.key === 'Enter' && handleSubmit('text')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSubmit('text'),\n            disabled: isLoading,\n            className: \"bg-blue-500 text-white p-2 rounded-full hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"w-5 h-5 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Send, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSubmit('image'),\n            disabled: isLoading,\n            className: \"bg-purple-500 text-white p-2 rounded-full hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-purple-500\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"w-5 h-5 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Image, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 p-4 absolute bottom-0 left-0 right-0 bg-white\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"f3aC4ljJCZKycPeC4bt+iSPjBuw=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useEffect","Send","Image","Loader2","Menu","X","collection","query","where","getDocs","addDoc","orderBy","serverTimestamp","updateDoc","doc","firestore","auth","axios","useNavigate","jsxDEV","_jsxDEV","platforms","Chat","_s","platform","setPlatform","input","setInput","messages","setMessages","conversations","setConversations","isLoading","setIsLoading","isSidebarOpen","setIsSidebarOpen","error","setError","selectedConversation","setSelectedConversation","conversationHistory","setConversationHistory","navigate","currentQuestion","setCurrentQuestion","userResponses","setUserResponses","questionIndex","setQuestionIndex","questions","key","question","options","unsubscribe","onAuthStateChanged","user","console","log","uid","fetchConversations","currentUser","Error","q","querySnapshot","conversationsList","docs","map","data","id","prompt","response","createdAt","toDate","Date","type","content","err","code","message","includes","handleSubmit","trim","newUserMessage","updatedMessages","prev","prevIndex","askNextQuestion","length","nextQuestion","aiMessage","join","generateFinalPost","enhancedPrompt","constructEnhancedPrompt","_auth$currentUser","_auth$currentUser2","token","getIdToken","post","headers","Authorization","aiContent","extractGeneratedContent","generated_text","newAssistantMessage","push","updatedHistory","conversationData","userId","lastUpdated","docRef","firestoreError","errorMessage","details","history","basePrompt","tone","toLowerCase","goal","callToAction","slice","forEach","index","startNewConversation","loadConversation","conversation","fullResponse","contentStart","indexOf","substring","contentEnd","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","conv","toLocaleString","image","src","alt","p","value","onChange","e","target","placeholder","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["D:/Academic Courses/AI/LynqAI_v1/frontend/src/pages/Chat.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Send, Image, Loader2, Menu, X } from 'lucide-react';\r\nimport { collection, query, where, getDocs, addDoc, orderBy, serverTimestamp, updateDoc, doc } from 'firebase/firestore';\r\nimport { firestore, auth } from '../firebase-config';\r\nimport axios from '../axiosConfig';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst platforms = ['LinkedIn', 'Twitter', 'Facebook', 'Instagram'];\r\n\r\nexport default function Chat() {\r\n  const [platform, setPlatform] = useState('LinkedIn');\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [conversationHistory, setConversationHistory] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [userResponses, setUserResponses] = useState({});\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n\r\n  const questions = [\r\n    { key: 'tone', question: \"Let's start with the tone. How would you like your post to sound?\", options: ['Professional', 'Inspirational', 'Casual'] },\r\n    { key: 'length', question: \"Great choice! Now, how long should we make this post?\", options: ['Short (1-2 sentences)', 'Medium (3-4 sentences)', 'Long (5+ sentences)'] },\r\n    { key: 'goal', question: \"Alright, what's the main goal you want to achieve with this post?\", options: ['Inform', 'Engage', 'Promote'] },\r\n    { key: 'callToAction', question: \"Almost there! Would you like to include a call-to-action in your post?\", options: ['Yes', 'No'] },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        console.log('User authenticated:', user.uid);\r\n        fetchConversations();\r\n      } else {\r\n        console.log('No user authenticated, redirecting to login');\r\n        navigate('/');\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [navigate]);\r\n\r\n  const fetchConversations = async () => {\r\n    setError(null);\r\n    try {\r\n      const user = auth.currentUser;\r\n      if (!user) throw new Error('No user logged in');\r\n\r\n      console.log('Fetching conversations for user:', user.uid);\r\n      const q = query(\r\n        collection(firestore, 'conversations'),\r\n        where('userId', '==', user.uid),\r\n        orderBy('createdAt', 'desc')\r\n      );\r\n      const querySnapshot = await getDocs(q);\r\n      const conversationsList = querySnapshot.docs.map(doc => {\r\n        const data = doc.data();\r\n        return {\r\n          id: doc.id,\r\n          prompt: data.prompt,\r\n          response: data.response,\r\n          platform: data.platform,\r\n          createdAt: data.createdAt ? data.createdAt.toDate() : new Date(),\r\n          messages: [\r\n            { type: 'user', content: data.prompt, platform: data.platform },\r\n            { type: 'assistant', content: data.response, platform: data.platform }\r\n          ]\r\n        };\r\n      });\r\n      console.log('Fetched conversations:', conversationsList);\r\n      setConversations(conversationsList);\r\n    } catch (err) {\r\n      console.error('Error fetching conversations:', err);\r\n      if (err.code === 'failed-precondition' || err.message.includes('requires an index')) {\r\n        setError('Database index is being created. Please try again in a few minutes.');\r\n      } else {\r\n        setError('Failed to fetch conversations. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (type) => {\r\n    if (!input.trim()) return;\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    const newUserMessage = { type: 'user', content: input, platform };\r\n    const updatedMessages = [...messages, newUserMessage];\r\n    setMessages(updatedMessages);\r\n    setInput('');\r\n\r\n    if (currentQuestion) {\r\n      // Handle user's response to AI's question\r\n      setUserResponses(prev => ({ ...prev, [currentQuestion.key]: input }));\r\n      setCurrentQuestion(null);\r\n      setQuestionIndex(prevIndex => prevIndex + 1);\r\n    }\r\n\r\n    // Ask the next question or generate the final post\r\n    await askNextQuestion(updatedMessages);\r\n  };\r\n\r\n  const askNextQuestion = async (updatedMessages) => {\r\n    if (questionIndex < questions.length) {\r\n      const nextQuestion = questions[questionIndex];\r\n      setCurrentQuestion(nextQuestion);\r\n      const aiMessage = {\r\n        type: 'assistant',\r\n        content: `${nextQuestion.question} ${nextQuestion.options.join(', ')}`,\r\n        platform\r\n      };\r\n      setMessages([...updatedMessages, aiMessage]);\r\n      setIsLoading(false);\r\n    } else {\r\n      // All questions answered, generate the final post\r\n      await generateFinalPost(updatedMessages);\r\n    }\r\n  };\r\n\r\n  const generateFinalPost = async (updatedMessages) => {\r\n    let enhancedPrompt = constructEnhancedPrompt(userResponses, platform, 'text', conversationHistory);\r\n    \r\n    try {\r\n      const token = await auth.currentUser?.getIdToken();\r\n      console.log('Sending request to backend');\r\n      const response = await axios.post('/generate-text', \r\n        { platform, prompt: enhancedPrompt },\r\n        { \r\n          headers: { \r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n      \r\n      const data = response.data;\r\n      \r\n      console.log('AI Model Response:', data);\r\n      \r\n      // Extract only the generated content, removing any instructions or prompts\r\n      const aiContent = extractGeneratedContent(data.generated_text);\r\n      \r\n      const newAssistantMessage = {\r\n        type: 'assistant',\r\n        content: `Great! Based on your preferences, here's a ${platform} post I've crafted for you:\\n\\n${aiContent}\\n\\nWhat do you think? Would you like to make any changes or try a different approach?`,\r\n        platform\r\n      };\r\n      \r\n      updatedMessages.push(newAssistantMessage);\r\n      setMessages(updatedMessages);\r\n\r\n      // Update conversation history\r\n      const updatedHistory = [...conversationHistory, ...updatedMessages];\r\n      setConversationHistory(updatedHistory);\r\n\r\n      // Save conversation to Firestore\r\n      if (auth.currentUser?.uid) {\r\n        console.log('Saving conversation to Firestore');\r\n        try {\r\n          const conversationData = {\r\n            userId: auth.currentUser.uid,\r\n            messages: updatedMessages,\r\n            platform,\r\n            lastUpdated: serverTimestamp(),\r\n            conversationHistory: updatedHistory\r\n          };\r\n\r\n          if (selectedConversation) {\r\n            await updateDoc(doc(firestore, 'conversations', selectedConversation.id), conversationData);\r\n            console.log('Conversation updated with ID:', selectedConversation.id);\r\n          } else {\r\n            const docRef = await addDoc(collection(firestore, 'conversations'), {\r\n              ...conversationData,\r\n              createdAt: serverTimestamp()\r\n            });\r\n            console.log('New conversation saved with ID:', docRef.id);\r\n            setSelectedConversation({ id: docRef.id, ...conversationData });\r\n          }\r\n        } catch (firestoreError) {\r\n          console.error('Error saving to Firestore:', firestoreError);\r\n          setError('Failed to save conversation. Please try again.');\r\n        }\r\n      } else {\r\n        console.error('User not authenticated');\r\n        setError('User not authenticated. Please log in again.');\r\n      }\r\n\r\n      fetchConversations();\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      let errorMessage = 'An error occurred while generating content. Please try again.';\r\n      if (err.response && err.response.data && err.response.data.error) {\r\n        errorMessage = err.response.data.error;\r\n        if (err.response.data.details) {\r\n          errorMessage += ` Details: ${err.response.data.details}`;\r\n        }\r\n      }\r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n      setCurrentQuestion(null);\r\n      setUserResponses({});\r\n      setQuestionIndex(0);\r\n    }\r\n  };\r\n\r\n  const constructEnhancedPrompt = (userResponses, platform, type, history) => {\r\n    let basePrompt = `Create a ${type === 'text' ? 'post' : 'image concept'} for ${platform} that feels personal and engaging. Here's what we know about the user's preferences: `;\r\n\r\n    basePrompt += `They want a ${userResponses.tone.toLowerCase()} tone. `;\r\n    basePrompt += `The post should be ${userResponses.length.toLowerCase()}. `;\r\n    basePrompt += `Their main goal is to ${userResponses.goal.toLowerCase()}. `;\r\n    basePrompt += `They ${userResponses.callToAction === 'Yes' ? 'want' : 'don\\'t want'} to include a call-to-action. `;\r\n\r\n    // Add platform-specific instructions\r\n    switch (platform) {\r\n      case 'LinkedIn':\r\n        basePrompt += `Remember, this is for LinkedIn, so keep it professional while still being engaging. Include relevant industry hashtags if appropriate. `;\r\n        break;\r\n      case 'Twitter':\r\n        basePrompt += `This is for Twitter, so keep it concise and impactful. Use hashtags wisely and stay under 280 characters. `;\r\n        break;\r\n      case 'Facebook':\r\n        basePrompt += `For Facebook, we want to encourage interaction. Consider suggesting rich media like images or videos if it fits the content. `;\r\n        break;\r\n      case 'Instagram':\r\n        basePrompt += `This is for Instagram, so the caption should be visually descriptive. Use emojis and hashtags strategically. `;\r\n        break;\r\n    }\r\n\r\n    basePrompt += `Please provide the post content, followed by 2-3 engagement strategies or variations. `;\r\n\r\n    // Add conversation history to the prompt\r\n    if (history.length > 0) {\r\n      basePrompt += `Also, consider this recent conversation context: `;\r\n      history.slice(-4).forEach((message, index) => {\r\n        basePrompt += `${message.type === 'user' ? 'User' : 'Assistant'}: ${message.content} `;\r\n      });\r\n    }\r\n\r\n    return basePrompt;\r\n  };\r\n\r\n  const startNewConversation = () => {\r\n    setMessages([]);\r\n    setSelectedConversation(null);\r\n    setPlatform('LinkedIn');\r\n    setIsSidebarOpen(false);\r\n    setConversationHistory([]);\r\n  };\r\n\r\n  const loadConversation = (conversation) => {\r\n    if (conversation && conversation.messages) {\r\n      console.log('Loading conversation:', conversation);\r\n      setMessages(conversation.messages);\r\n      setPlatform(conversation.platform || 'LinkedIn');\r\n      setSelectedConversation(conversation);\r\n      setIsSidebarOpen(false);\r\n      // Set conversation history\r\n      setConversationHistory(conversation.conversationHistory || []);\r\n    } else {\r\n      console.error('Invalid conversation data:', conversation);\r\n      setError('Failed to load conversation. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Helper function to extract only the generated content\r\n  const extractGeneratedContent = (fullResponse) => {\r\n    // Remove any text before \"Generated Post\" or similar indicators\r\n    const contentStart = fullResponse.indexOf(\"Generated Post\");\r\n    if (contentStart !== -1) {\r\n      fullResponse = fullResponse.substring(contentStart);\r\n    }\r\n\r\n    // Remove any text after engagement strategies or variations\r\n    const contentEnd = fullResponse.indexOf(\"Engagement strategies:\");\r\n    if (contentEnd !== -1) {\r\n      fullResponse = fullResponse.substring(0, contentEnd);\r\n    }\r\n\r\n    // Remove any remaining instructions or labels\r\n    fullResponse = fullResponse.replace(/Generated Post.*?:/g, '').trim();\r\n    fullResponse = fullResponse.replace(/Verification of the Content:.*$/s, '').trim();\r\n\r\n    return fullResponse;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      {/* Sidebar */}\r\n      <div className={`fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} transition-transform duration-300 ease-in-out md:relative md:translate-x-0`}>\r\n        <div className=\"flex justify-between items-center p-4 border-b\">\r\n          <h2 className=\"text-xl font-semibold\">Conversations</h2>\r\n          <button onClick={() => setIsSidebarOpen(false)} className=\"md:hidden\">\r\n            <X className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"p-4\">\r\n          <button\r\n            onClick={startNewConversation}\r\n            className=\"w-full py-2 px-4 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition duration-300\"\r\n          >\r\n            New Conversation\r\n          </button>\r\n        </div>\r\n        <div className=\"overflow-y-auto h-full pb-20\">\r\n          {conversations.length === 0 ? (\r\n            <p className=\"text-gray-500 text-center p-4\">No conversations yet</p>\r\n          ) : (\r\n            conversations.map((conv) => (\r\n              <div\r\n                key={conv.id}\r\n                onClick={() => loadConversation(conv)}\r\n                className=\"p-4 border-b hover:bg-gray-100 cursor-pointer transition duration-300\"\r\n              >\r\n                <p className=\"font-medium truncate\">\r\n                  {conv.prompt || (conv.messages && conv.messages.length > 0 ? conv.messages[0].content : 'No messages')}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  {conv.createdAt ? conv.createdAt.toLocaleString() : 'Unknown date'}\r\n                </p>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-col flex-1 overflow-hidden\">\r\n        {/* Header */}\r\n        <header className=\"bg-white shadow-sm p-4 flex justify-between items-center\">\r\n          <button onClick={() => setIsSidebarOpen(true)} className=\"md:hidden\">\r\n            <Menu className=\"w-6 h-6\" />\r\n          </button>\r\n          <h1 className=\"text-2xl font-bold text-center flex-1\">\r\n            {selectedConversation ? `Conversation from ${selectedConversation.createdAt.toLocaleString()}` : 'Social Media Post Generator'}\r\n          </h1>\r\n          {selectedConversation && (\r\n            <button\r\n              onClick={startNewConversation}\r\n              className=\"bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition duration-300\"\r\n            >\r\n              New Conversation\r\n            </button>\r\n          )}\r\n        </header>\r\n\r\n        {/* Main chat area */}\r\n        <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n              <div className={`max-w-[70%] rounded-lg p-3 ${message.type === 'user' ? 'bg-blue-500 text-white' : 'bg-white shadow'}`}>\r\n                {message.platform && <p className=\"font-semibold mb-1\">{message.platform}</p>}\r\n                <p>{message.content}</p>\r\n                {message.image && <img src={message.image} alt=\"Generated\" className=\"mt-2 rounded-lg max-w-full h-auto\" />}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Input area */}\r\n        <div className=\"bg-white border-t border-gray-200 p-4\">\r\n          <div className=\"flex space-x-2 mb-2 overflow-x-auto pb-2\">\r\n            {platforms.map(p => (\r\n              <button\r\n                key={p}\r\n                onClick={() => setPlatform(p)}\r\n                className={`px-3 py-1 rounded-full text-sm flex-shrink-0 ${\r\n                  platform === p ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'\r\n                }`}\r\n              >\r\n                {p}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              placeholder=\"Type your prompt here...\"\r\n              className=\"flex-1 p-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              onKeyPress={(e) => e.key === 'Enter' && handleSubmit('text')}\r\n            />\r\n            <button\r\n              onClick={() => handleSubmit('text')}\r\n              disabled={isLoading}\r\n              className=\"bg-blue-500 text-white p-2 rounded-full hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              {isLoading ? <Loader2 className=\"w-5 h-5 animate-spin\" /> : <Send className=\"w-5 h-5\" />}\r\n            </button>\r\n            <button\r\n              onClick={() => handleSubmit('image')}\r\n              disabled={isLoading}\r\n              className=\"bg-purple-500 text-white p-2 rounded-full hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n            >\r\n              {isLoading ? <Loader2 className=\"w-5 h-5 animate-spin\" /> : <Image className=\"w-5 h-5\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {error && <div className=\"text-red-500 p-4 absolute bottom-0 left-0 right-0 bg-white\">{error}</div>}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}